package v1

import (
	"net/http"

	"github.com/sonroyaalmerol/musiqlx/internal/api"
)

func NewRouter() *http.ServeMux {
	mux := http.NewServeMux()

	// API Endpoints
	mux.Handle("/rest/addChatMessage", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/changePassword", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/createBookmark", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/createInternetRadioStation", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/createPlaylist", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/createPodcastChannel", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/createShare", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/createUser", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/deleteBookmark", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/deleteInternetRadioStation", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/deletePlaylist", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/deletePodcastChannel", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/deletePodcastEpisode", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/deleteShare", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/deleteUser", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/download", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/downloadPodcastEpisode", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getAlbum", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getAlbumInfo", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getAlbumInfo2", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getAlbumList", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getAlbumList2", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getArtist", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getArtistInfo", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getArtistInfo2", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getArtists", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getAvatar", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getBookmarks", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getCaptions", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getChatMessages", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getCoverArt", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getGenres", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getIndexes", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getInternetRadioStations", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getLicense", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getLyrics", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getLyricsBySongId", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getMusicDirectory", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getMusicFolders", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getNewestPodcasts", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getNowPlaying", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getOpenSubsonicExtensions", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getPlaylist", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getPlaylists", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getPlayQueue", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getPodcasts", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getRandomSongs", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getScanStatus", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getShares", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getSimilarSongs", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getSimilarSongs2", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getSong", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getSongsByGenre", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getStarred", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getStarred2", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getTopSongs", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getUser", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getUsers", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getVideoInfo", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/getVideos", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/hls", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/jukeboxControl", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/ping", api.UnprotectedPath(PingHandler))
	mux.Handle("/rest/refreshPodcasts", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/savePlayQueue", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/scrobble", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/search", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/search2", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/search3", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/setRating", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/star", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/startScan", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/stream", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/unstar", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/updateInternetRadioStation", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/updatePlaylist", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/updateShare", api.ProtectedPath(PingHandler))
	mux.Handle("/rest/updateUser", api.ProtectedPath(PingHandler))

	return mux
}

func PingHandler(w http.ResponseWriter, r *http.Request) {
	api.HandleSuccess(w, struct{}{})
}
